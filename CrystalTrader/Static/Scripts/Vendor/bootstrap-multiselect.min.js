(function(t,e){if(typeof define==="function"&&define.amd&&typeof require==="function"&&typeof require.specified==="function"&&require.specified("knockout")){define(["jquery","knockout"],e)}else{e(t.jQuery,t.ko)}})(this,function(t,e){"use strict"
if(typeof e!=="undefined"&&e.bindingHandlers&&!e.bindingHandlers.multiselect){e.bindingHandlers.multiselect={after:["options","value","selectedOptions","enable","disable"],init:function(i,s,l,o,n){var a=t(i)
var p=e.toJS(s())
a.multiselect(p)
if(l.has("options")){var r=l.get("options")
if(e.isObservable(r)){e.computed({read:function(){r()
setTimeout(function(){var t=a.data("multiselect")
if(t)t.updateOriginalOptions()
a.multiselect("rebuild")},1)},disposeWhenNodeIsRemoved:i})}}if(l.has("value")){var u=l.get("value")
if(e.isObservable(u)){e.computed({read:function(){u()
setTimeout(function(){a.multiselect("refresh")},1)},disposeWhenNodeIsRemoved:i}).extend({rateLimit:100,notifyWhenChangesStop:true})}}if(l.has("selectedOptions")){var h=l.get("selectedOptions")
if(e.isObservable(h)){e.computed({read:function(){h()
setTimeout(function(){a.multiselect("refresh")},1)},disposeWhenNodeIsRemoved:i}).extend({rateLimit:100,notifyWhenChangesStop:true})}}var c=function(t){setTimeout(function(){if(t)a.multiselect("enable")
else a.multiselect("disable")})}
if(l.has("enable")){var d=l.get("enable")
if(e.isObservable(d)){e.computed({read:function(){c(d())},disposeWhenNodeIsRemoved:i}).extend({rateLimit:100,notifyWhenChangesStop:true})}else{c(d)}}if(l.has("disable")){var f=l.get("disable")
if(e.isObservable(f)){e.computed({read:function(){c(!f())},disposeWhenNodeIsRemoved:i}).extend({rateLimit:100,notifyWhenChangesStop:true})}else{c(!f)}}e.utils.domNodeDisposal.addDisposeCallback(i,function(){a.multiselect("destroy")})},update:function(i,s,l,o,n){var a=t(i)
var p=e.toJS(s())
a.multiselect("setOptions",p)
a.multiselect("rebuild")}}}function i(t,e){for(var i=0;i<t.length;++i){e(t[i],i)}}function s(e,i){this.$select=t(e)
this.options=this.mergeOptions(t.extend({},i,this.$select.data()))
if(this.$select.attr("data-placeholder")){this.options.nonSelectedText=this.$select.data("placeholder")}this.originalOptions=this.$select.clone()[0].options
this.query=""
this.searchTimeout=null
this.lastToggledInput=null
this.options.multiple=this.$select.attr("multiple")==="multiple"
this.options.onChange=t.proxy(this.options.onChange,this)
this.options.onSelectAll=t.proxy(this.options.onSelectAll,this)
this.options.onDeselectAll=t.proxy(this.options.onDeselectAll,this)
this.options.onDropdownShow=t.proxy(this.options.onDropdownShow,this)
this.options.onDropdownHide=t.proxy(this.options.onDropdownHide,this)
this.options.onDropdownShown=t.proxy(this.options.onDropdownShown,this)
this.options.onDropdownHidden=t.proxy(this.options.onDropdownHidden,this)
this.options.onInitialized=t.proxy(this.options.onInitialized,this)
this.options.onFiltering=t.proxy(this.options.onFiltering,this)
this.buildContainer()
this.buildButton()
this.buildDropdown()
this.buildReset()
this.buildSelectAll()
this.buildDropdownOptions()
this.buildFilter()
this.updateButtonText()
this.updateSelectAll(true)
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}this.options.wasDisabled=this.$select.prop("disabled")
if(this.options.disableIfEmpty&&t("option",this.$select).length<=0){this.disable()}this.$select.wrap('<span class="multiselect-native-select" />').after(this.$container)
this.options.onInitialized(this.$select,this.$container)}s.prototype={defaults:{buttonText:function(e,i){if(this.disabledText.length>0&&(i.prop("disabled")||e.length==0&&this.disableIfEmpty)){return this.disabledText}else if(e.length===0){return this.nonSelectedText}else if(this.allSelectedText&&e.length===t("option",t(i)).length&&t("option",t(i)).length!==1&&this.multiple){if(this.selectAllNumber){return this.allSelectedText+" ("+e.length+")"}else{return this.allSelectedText}}else if(this.numberDisplayed!=0&&e.length>this.numberDisplayed){return e.length+" "+this.nSelectedText}else{var s=""
var l=this.delimiterText
e.each(function(){var e=t(this).attr("label")!==undefined?t(this).attr("label"):t(this).text()
s+=e+l})
return s.substr(0,s.length-this.delimiterText.length)}},buttonTitle:function(e,i){if(e.length===0){return this.nonSelectedText}else{var s=""
var l=this.delimiterText
e.each(function(){var e=t(this).attr("label")!==undefined?t(this).attr("label"):t(this).text()
s+=e+l})
return s.substr(0,s.length-this.delimiterText.length)}},checkboxName:function(t){return false},optionLabel:function(e){return t(e).attr("label")||t(e).text()},optionClass:function(e){return t(e).attr("class")||""},onChange:function(t,e){},onDropdownShow:function(t){},onDropdownHide:function(t){},onDropdownShown:function(t){},onDropdownHidden:function(t){},onSelectAll:function(){},onDeselectAll:function(){},onInitialized:function(t,e){},onFiltering:function(t){},enableHTML:false,buttonClass:"btn btn-default",inheritClass:false,buttonWidth:"auto",buttonContainer:'<div class="btn-group" />',dropRight:false,dropUp:false,selectedClass:"active",maxHeight:false,includeSelectAllOption:false,includeSelectAllIfMoreThan:0,selectAllText:" Select all",selectAllValue:"multiselect-all",selectAllName:false,selectAllNumber:true,selectAllJustVisible:true,enableFiltering:false,enableCaseInsensitiveFiltering:false,enableFullValueFiltering:false,enableClickableOptGroups:false,enableCollapsibleOptGroups:false,collapseOptGroupsByDefault:false,filterPlaceholder:"Search",filterBehavior:"text",includeFilterClearBtn:true,preventInputChangeEvent:false,nonSelectedText:"None selected",nSelectedText:"selected",allSelectedText:"All selected",numberDisplayed:3,disableIfEmpty:false,disabledText:"",delimiterText:", ",includeResetOption:false,includeResetDivider:false,resetText:"Reset",templates:{button:'<button type="button" class="multiselect dropdown-toggle" data-toggle="dropdown"><span class="multiselect-selected-text"></span> <b class="caret"></b></button>',ul:'<ul class="multiselect-container dropdown-menu"></ul>',filter:'<li class="multiselect-item multiselect-filter"><div class="input-group"><span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span><input class="form-control multiselect-search" type="text" /></div></li>',filterClearBtn:'<span class="input-group-btn"><button class="btn btn-default multiselect-clear-filter" type="button"><i class="glyphicon glyphicon-remove-circle"></i></button></span>',li:'<li><a tabindex="0"><label></label></a></li>',divider:'<li class="multiselect-item divider"></li>',liGroup:'<li class="multiselect-item multiselect-group"><label></label></li>',resetButton:'<li class="multiselect-reset text-center"><div class="input-group"><a class="btn btn-default btn-block"></a></div></li>'}},constructor:s,buildContainer:function(){this.$container=t(this.options.buttonContainer)
this.$container.on("show.bs.dropdown",this.options.onDropdownShow)
this.$container.on("hide.bs.dropdown",this.options.onDropdownHide)
this.$container.on("shown.bs.dropdown",this.options.onDropdownShown)
this.$container.on("hidden.bs.dropdown",this.options.onDropdownHidden)},buildButton:function(){this.$button=t(this.options.templates.button).addClass(this.options.buttonClass)
if(this.$select.attr("class")&&this.options.inheritClass){this.$button.addClass(this.$select.attr("class"))}if(this.$select.prop("disabled")){this.disable()}else{this.enable()}if(this.options.buttonWidth&&this.options.buttonWidth!=="auto"){this.$button.css({width:"100%",overflow:"hidden","text-overflow":"ellipsis"})
this.$container.css({width:this.options.buttonWidth})}var e=this.$select.attr("tabindex")
if(e){this.$button.attr("tabindex",e)}this.$container.prepend(this.$button)},buildDropdown:function(){this.$ul=t(this.options.templates.ul)
if(this.options.dropRight){this.$ul.addClass("pull-right")}if(this.options.maxHeight){this.$ul.css({"max-height":this.options.maxHeight+"px","overflow-y":"auto","overflow-x":"hidden"})}if(this.options.dropUp){var e=Math.min(this.options.maxHeight,t('option[data-role!="divider"]',this.$select).length*26+t('option[data-role="divider"]',this.$select).length*19+(this.options.includeSelectAllOption?26:0)+(this.options.enableFiltering||this.options.enableCaseInsensitiveFiltering?44:0))
var i=e+34
this.$ul.css({"max-height":e+"px","overflow-y":"auto","overflow-x":"hidden","margin-top":"-"+i+"px"})}this.$container.append(this.$ul)},buildDropdownOptions:function(){this.$select.children().each(t.proxy(function(e,i){var s=t(i)
var l=s.prop("tagName").toLowerCase()
if(s.prop("value")===this.options.selectAllValue){return}if(l==="optgroup"){this.createOptgroup(i)}else if(l==="option"){if(s.data("role")==="divider"){this.createDivider()}else{this.createOptionValue(i)}}},this))
t(this.$ul).off("change",'li:not(.multiselect-group) input[type="checkbox"], li:not(.multiselect-group) input[type="radio"]')
t(this.$ul).on("change",'li:not(.multiselect-group) input[type="checkbox"], li:not(.multiselect-group) input[type="radio"]',t.proxy(function(e){var i=t(e.target)
var s=i.prop("checked")||false
var l=i.val()===this.options.selectAllValue
if(this.options.selectedClass){if(s){i.closest("li").addClass(this.options.selectedClass)}else{i.closest("li").removeClass(this.options.selectedClass)}}var o=i.val()
var n=this.getOptionByValue(o)
var a=t("option",this.$select).not(n)
var p=t("input",this.$container).not(i)
if(l){if(s){this.selectAll(this.options.selectAllJustVisible,true)}else{this.deselectAll(this.options.selectAllJustVisible,true)}}else{if(s){n.prop("selected",true)
if(this.options.multiple){n.prop("selected",true)}else{if(this.options.selectedClass){t(p).closest("li").removeClass(this.options.selectedClass)}t(p).prop("checked",false)
a.prop("selected",false)
this.$button.click()}if(this.options.selectedClass==="active"){a.closest("a").css("outline","")}}else{n.prop("selected",false)}this.options.onChange(n,s)
this.updateSelectAll()
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}}this.$select.change()
this.updateButtonText()
if(this.options.preventInputChangeEvent){return false}},this))
t("li a",this.$ul).on("mousedown",function(t){if(t.shiftKey){return false}})
t(this.$ul).on("touchstart click","li a",t.proxy(function(e){e.stopPropagation()
var i=t(e.target)
if(e.shiftKey&&this.options.multiple){if(i.is("label")){e.preventDefault()
i=i.find("input")
i.prop("checked",!i.prop("checked"))}var s=i.prop("checked")||false
if(this.lastToggledInput!==null&&this.lastToggledInput!==i){var l=this.$ul.find("li:visible").index(i.parents("li"))
var o=this.$ul.find("li:visible").index(this.lastToggledInput.parents("li"))
if(l>o){var n=o
o=l
l=n}++o
var a=this.$ul.find("li").not(".multiselect-filter-hidden").slice(l,o).find("input")
a.prop("checked",s)
if(this.options.selectedClass){a.closest("li").toggleClass(this.options.selectedClass,s)}for(var p=0,r=a.length;p<r;p++){var u=t(a[p])
var h=this.getOptionByValue(u.val())
h.prop("selected",s)}}i.trigger("change")}if(i.is("input")&&!i.closest("li").is(".multiselect-item")){this.lastToggledInput=i}i.blur()},this))
this.$container.off("keydown.multiselect").on("keydown.multiselect",t.proxy(function(e){if(t('input[type="text"]',this.$container).is(":focus")){return}if(e.keyCode===9&&this.$container.hasClass("open")){this.$button.click()}else{var i=t(this.$container).find("li:not(.divider):not(.disabled) a").filter(":visible")
if(!i.length){return}var s=i.index(i.filter(":focus"))
if(e.keyCode===38&&s>0){s--}else if(e.keyCode===40&&s<i.length-1){s++}else if(!~s){s=0}var l=i.eq(s)
l.focus()
if(e.keyCode===32||e.keyCode===13){var o=l.find("input")
o.prop("checked",!o.prop("checked"))
o.change()}e.stopPropagation()
e.preventDefault()}},this))
if(this.options.enableClickableOptGroups&&this.options.multiple){t("li.multiselect-group input",this.$ul).on("change",t.proxy(function(e){e.stopPropagation()
var i=t(e.target)
var s=i.prop("checked")||false
var l=t(e.target).closest("li")
var o=l.nextUntil("li.multiselect-group").not(".multiselect-filter-hidden").not(".disabled")
var n=o.find("input")
var a=[]
var p=[]
if(this.options.selectedClass){if(s){l.addClass(this.options.selectedClass)}else{l.removeClass(this.options.selectedClass)}}t.each(n,t.proxy(function(e,i){var l=t(i).val()
var o=this.getOptionByValue(l)
if(s){t(i).prop("checked",true)
t(i).closest("li").addClass(this.options.selectedClass)
o.prop("selected",true)}else{t(i).prop("checked",false)
t(i).closest("li").removeClass(this.options.selectedClass)
o.prop("selected",false)}p.push(this.getOptionByValue(l))},this))
this.options.onChange(p,s)
this.$select.change()
this.updateButtonText()
this.updateSelectAll()},this))}if(this.options.enableCollapsibleOptGroups&&this.options.multiple){t("li.multiselect-group .caret-container",this.$ul).on("click",t.proxy(function(e){var i=t(e.target).closest("li")
var s=i.nextUntil("li.multiselect-group").not(".multiselect-filter-hidden")
var l=true
s.each(function(){l=l&&!t(this).hasClass("multiselect-collapsible-hidden")})
if(l){s.hide().addClass("multiselect-collapsible-hidden")}else{s.show().removeClass("multiselect-collapsible-hidden")}},this))
t("li.multiselect-all",this.$ul).css("background","#f3f3f3").css("border-bottom","1px solid #eaeaea")
t("li.multiselect-all > a > label.checkbox",this.$ul).css("padding","3px 20px 3px 35px")
t("li.multiselect-group > a > input",this.$ul).css("margin","4px 0px 5px -20px")}},createOptionValue:function(e){var i=t(e)
if(i.is(":selected")){i.prop("selected",true)}var s=this.options.optionLabel(e)
var l=this.options.optionClass(e)
var o=i.val()
var n=this.options.multiple?"checkbox":"radio"
var a=t(this.options.templates.li)
var p=t("label",a)
p.addClass(n)
p.attr("title",s)
a.addClass(l)
if(this.options.collapseOptGroupsByDefault&&t(e).parent().prop("tagName").toLowerCase()==="optgroup"){a.addClass("multiselect-collapsible-hidden")
a.hide()}if(this.options.enableHTML){p.html(" "+s)}else{p.text(" "+s)}var r=t("<input/>").attr("type",n)
var u=this.options.checkboxName(i)
if(u){r.attr("name",u)}p.prepend(r)
var h=i.prop("selected")||false
r.val(o)
if(o===this.options.selectAllValue){a.addClass("multiselect-item multiselect-all")
r.parent().parent().addClass("multiselect-all")}p.attr("title",i.attr("title"))
this.$ul.append(a)
if(i.is(":disabled")){r.attr("disabled","disabled").prop("disabled",true).closest("a").attr("tabindex","-1").closest("li").addClass("disabled")}r.prop("checked",h)
if(h&&this.options.selectedClass){r.closest("li").addClass(this.options.selectedClass)}},createDivider:function(e){var i=t(this.options.templates.divider)
this.$ul.append(i)},createOptgroup:function(e){var i=t(e).attr("label")
var s=t(e).attr("value")
var l=t('<li class="multiselect-item multiselect-group"><a href="javascript:void(0);"><label><b></b></label></a></li>')
var o=this.options.optionClass(e)
l.addClass(o)
if(this.options.enableHTML){t("label b",l).html(" "+i)}else{t("label b",l).text(" "+i)}if(this.options.enableCollapsibleOptGroups&&this.options.multiple){t("a",l).append('<span class="caret-container"><b class="caret"></b></span>')}if(this.options.enableClickableOptGroups&&this.options.multiple){t("a label",l).prepend('<input type="checkbox" value="'+s+'"/>')}if(t(e).is(":disabled")){l.addClass("disabled")}this.$ul.append(l)
t("option",e).each(t.proxy(function(t,e){this.createOptionValue(e)},this))},buildReset:function(){if(this.options.includeResetOption){if(this.options.includeResetDivider){this.$ul.prepend(t(this.options.templates.divider))}var e=t(this.options.templates.resetButton)
if(this.options.enableHTML){t("a",e).html(this.options.resetText)}else{t("a",e).text(this.options.resetText)}t("a",e).click(t.proxy(function(){this.clearSelection()},this))
this.$ul.prepend(e)}},buildSelectAll:function(){if(typeof this.options.selectAllValue==="number"){this.options.selectAllValue=this.options.selectAllValue.toString()}var e=this.hasSelectAll()
if(!e&&this.options.includeSelectAllOption&&this.options.multiple&&t("option",this.$select).length>this.options.includeSelectAllIfMoreThan){if(this.options.includeSelectAllDivider){this.$ul.prepend(t(this.options.templates.divider))}var i=t(this.options.templates.li)
t("label",i).addClass("checkbox")
if(this.options.enableHTML){t("label",i).html(" "+this.options.selectAllText)}else{t("label",i).text(" "+this.options.selectAllText)}if(this.options.selectAllName){t("label",i).prepend('<input type="checkbox" name="'+this.options.selectAllName+'" />')}else{t("label",i).prepend('<input type="checkbox" />')}var s=t("input",i)
s.val(this.options.selectAllValue)
i.addClass("multiselect-item multiselect-all")
s.parent().parent().addClass("multiselect-all")
this.$ul.prepend(i)
s.prop("checked",false)}},buildFilter:function(){if(this.options.enableFiltering||this.options.enableCaseInsensitiveFiltering){var e=Math.max(this.options.enableFiltering,this.options.enableCaseInsensitiveFiltering)
if(this.$select.find("option").length>=e){this.$filter=t(this.options.templates.filter)
t("input",this.$filter).attr("placeholder",this.options.filterPlaceholder)
if(this.options.includeFilterClearBtn){var i=t(this.options.templates.filterClearBtn)
i.on("click",t.proxy(function(e){clearTimeout(this.searchTimeout)
this.query=""
this.$filter.find(".multiselect-search").val("")
t("li",this.$ul).show().removeClass("multiselect-filter-hidden")
this.updateSelectAll()
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}},this))
this.$filter.find(".input-group").append(i)}this.$ul.prepend(this.$filter)
this.$filter.val(this.query).on("click",function(t){t.stopPropagation()}).on("input keydown",t.proxy(function(e){if(e.which===13){e.preventDefault()}clearTimeout(this.searchTimeout)
this.searchTimeout=this.asyncFunction(t.proxy(function(){if(this.query!==e.target.value){this.query=e.target.value
var i,s
t.each(t("li",this.$ul),t.proxy(function(e,l){var o=t("input",l).length>0?t("input",l).val():""
var n=t("label",l).text()
var a=""
if(this.options.filterBehavior==="text"){a=n}else if(this.options.filterBehavior==="value"){a=o}else if(this.options.filterBehavior==="both"){a=n+"\n"+o}if(o!==this.options.selectAllValue&&n){var p=false
if(this.options.enableCaseInsensitiveFiltering){a=a.toLowerCase()
this.query=this.query.toLowerCase()}if(this.options.enableFullValueFiltering&&this.options.filterBehavior!=="both"){var r=a.trim().substring(0,this.query.length)
if(this.query.indexOf(r)>-1){p=true}}else if(a.indexOf(this.query)>-1){p=true}if(!p){t(l).css("display","none")
t(l).addClass("multiselect-filter-hidden")}if(p){t(l).css("display","block")
t(l).removeClass("multiselect-filter-hidden")}if(t(l).hasClass("multiselect-group")){i=l
s=p}else{if(p){t(i).show().removeClass("multiselect-filter-hidden")}if(!p&&s){t(l).show().removeClass("multiselect-filter-hidden")}}}},this))}this.updateSelectAll()
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}this.options.onFiltering(e.target)},this),300,this)},this))}}},destroy:function(){this.$container.remove()
this.$select.show()
this.$select.prop("disabled",this.options.wasDisabled)
this.$select.data("multiselect",null)},refresh:function(){var e={}
t("li input",this.$ul).each(function(){e[t(this).val()]=t(this)})
t("option",this.$select).each(t.proxy(function(i,s){var l=t(s)
var o=e[t(s).val()]
if(l.is(":selected")){o.prop("checked",true)
if(this.options.selectedClass){o.closest("li").addClass(this.options.selectedClass)}}else{o.prop("checked",false)
if(this.options.selectedClass){o.closest("li").removeClass(this.options.selectedClass)}}if(l.is(":disabled")){o.attr("disabled","disabled").prop("disabled",true).closest("li").addClass("disabled")}else{o.prop("disabled",false).closest("li").removeClass("disabled")}},this))
this.updateButtonText()
this.updateSelectAll()
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}},select:function(e,i){if(!t.isArray(e)){e=[e]}for(var s=0;s<e.length;s++){var l=e[s]
if(l===null||l===undefined){continue}var o=this.getOptionByValue(l)
var n=this.getInputByValue(l)
if(o===undefined||n===undefined){continue}if(!this.options.multiple){this.deselectAll(false)}if(this.options.selectedClass){n.closest("li").addClass(this.options.selectedClass)}n.prop("checked",true)
o.prop("selected",true)
if(i){this.options.onChange(o,true)}}this.updateButtonText()
this.updateSelectAll()
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}},clearSelection:function(){this.deselectAll(false)
this.updateButtonText()
this.updateSelectAll()
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}},deselect:function(e,i){if(!t.isArray(e)){e=[e]}for(var s=0;s<e.length;s++){var l=e[s]
if(l===null||l===undefined){continue}var o=this.getOptionByValue(l)
var n=this.getInputByValue(l)
if(o===undefined||n===undefined){continue}if(this.options.selectedClass){n.closest("li").removeClass(this.options.selectedClass)}n.prop("checked",false)
o.prop("selected",false)
if(i){this.options.onChange(o,false)}}this.updateButtonText()
this.updateSelectAll()
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}},selectAll:function(e,i){var e=typeof e==="undefined"?true:e
var s=t("li:not(.divider):not(.disabled):not(.multiselect-group)",this.$ul)
var l=t("li:not(.divider):not(.disabled):not(.multiselect-group):not(.multiselect-filter-hidden):not(.multiselect-collapisble-hidden)",this.$ul).filter(":visible")
if(e){t("input:enabled",l).prop("checked",true)
l.addClass(this.options.selectedClass)
t("input:enabled",l).each(t.proxy(function(e,i){var s=t(i).val()
var l=this.getOptionByValue(s)
t(l).prop("selected",true)},this))}else{t("input:enabled",s).prop("checked",true)
s.addClass(this.options.selectedClass)
t("input:enabled",s).each(t.proxy(function(e,i){var s=t(i).val()
var l=this.getOptionByValue(s)
t(l).prop("selected",true)},this))}t('li input[value="'+this.options.selectAllValue+'"]',this.$ul).prop("checked",true)
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}if(i){this.options.onSelectAll()}},deselectAll:function(e,i){var e=typeof e==="undefined"?true:e
var s=t("li:not(.divider):not(.disabled):not(.multiselect-group)",this.$ul)
var l=t("li:not(.divider):not(.disabled):not(.multiselect-group):not(.multiselect-filter-hidden):not(.multiselect-collapisble-hidden)",this.$ul).filter(":visible")
if(e){t('input[type="checkbox"]:enabled',l).prop("checked",false)
l.removeClass(this.options.selectedClass)
t('input[type="checkbox"]:enabled',l).each(t.proxy(function(e,i){var s=t(i).val()
var l=this.getOptionByValue(s)
t(l).prop("selected",false)},this))}else{t('input[type="checkbox"]:enabled',s).prop("checked",false)
s.removeClass(this.options.selectedClass)
t('input[type="checkbox"]:enabled',s).each(t.proxy(function(e,i){var s=t(i).val()
var l=this.getOptionByValue(s)
t(l).prop("selected",false)},this))}t('li input[value="'+this.options.selectAllValue+'"]',this.$ul).prop("checked",false)
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}if(i){this.options.onDeselectAll()}},rebuild:function(){this.$ul.html("")
this.options.multiple=this.$select.attr("multiple")==="multiple"
this.buildSelectAll()
this.buildDropdownOptions()
this.buildFilter()
this.updateButtonText()
this.updateSelectAll(true)
if(this.options.enableClickableOptGroups&&this.options.multiple){this.updateOptGroups()}if(this.options.disableIfEmpty&&t("option",this.$select).length<=0){this.disable()}else{this.enable()}if(this.options.dropRight){this.$ul.addClass("pull-right")}},dataprovider:function(e){var s=0
var l=this.$select.empty()
t.each(e,function(e,o){var n
if(t.isArray(o.children)){s++
n=t("<optgroup/>").attr({label:o.label||"Group "+s,disabled:!!o.disabled,value:o.value})
i(o.children,function(e){var i={value:e.value,label:e.label||e.value,title:e.title,selected:!!e.selected,disabled:!!e.disabled}
for(var s in e.attributes){i["data-"+s]=e.attributes[s]}n.append(t("<option/>").attr(i))})}else{var a={value:o.value,label:o.label||o.value,title:o.title,"class":o["class"],selected:!!o["selected"],disabled:!!o["disabled"]}
for(var p in o.attributes){a["data-"+p]=o.attributes[p]}n=t("<option/>").attr(a)
n.text(o.label||o.value)}l.append(n)})
this.rebuild()},enable:function(){this.$select.prop("disabled",false)
this.$button.prop("disabled",false).removeClass("disabled")},disable:function(){this.$select.prop("disabled",true)
this.$button.prop("disabled",true).addClass("disabled")},setOptions:function(t){this.options=this.mergeOptions(t)},mergeOptions:function(e){return t.extend(true,{},this.defaults,this.options,e)},hasSelectAll:function(){return t("li.multiselect-all",this.$ul).length>0},updateOptGroups:function(){var e=t("li.multiselect-group",this.$ul)
var i=this.options.selectedClass
e.each(function(){var e=t(this).nextUntil("li.multiselect-group").not(".multiselect-filter-hidden").not(".disabled")
var s=true
e.each(function(){var e=t("input",this)
if(!e.prop("checked")){s=false}})
if(i){if(s){t(this).addClass(i)}else{t(this).removeClass(i)}}t("input",this).prop("checked",s)})},updateSelectAll:function(e){if(this.hasSelectAll()){var i=t("li:not(.multiselect-item):not(.multiselect-filter-hidden):not(.multiselect-group):not(.disabled) input:enabled",this.$ul)
var s=i.length
var l=i.filter(":checked").length
var o=t("li.multiselect-all",this.$ul)
var n=o.find("input")
if(l>0&&l===s){n.prop("checked",true)
o.addClass(this.options.selectedClass)}else{n.prop("checked",false)
o.removeClass(this.options.selectedClass)}}},updateButtonText:function(){var e=this.getSelected()
if(this.options.enableHTML){t(".multiselect .multiselect-selected-text",this.$container).html(this.options.buttonText(e,this.$select))}else{t(".multiselect .multiselect-selected-text",this.$container).text(this.options.buttonText(e,this.$select))}t(".multiselect",this.$container).attr("title",this.options.buttonTitle(e,this.$select))},getSelected:function(){return t("option",this.$select).filter(":selected")},getOptionByValue:function(e){var i=t("option",this.$select)
var s=e.toString()
for(var l=0;l<i.length;l=l+1){var o=i[l]
if(o.value===s){return t(o)}}},getInputByValue:function(e){var i=t("li input:not(.multiselect-search)",this.$ul)
var s=e.toString()
for(var l=0;l<i.length;l=l+1){var o=i[l]
if(o.value===s){return t(o)}}},updateOriginalOptions:function(){this.originalOptions=this.$select.clone()[0].options},asyncFunction:function(t,e,i){var s=Array.prototype.slice.call(arguments,3)
return setTimeout(function(){t.apply(i||window,s)},e)},setAllSelectedText:function(t){this.options.allSelectedText=t
this.updateButtonText()}}
t.fn.multiselect=function(e,i,l){return this.each(function(){var o=t(this).data("multiselect")
var n=typeof e==="object"&&e
if(!o){o=new s(this,n)
t(this).data("multiselect",o)}if(typeof e==="string"){o[e](i,l)
if(e==="destroy"){t(this).data("multiselect",false)}}})}
t.fn.multiselect.Constructor=s
t(function(){t("select[data-role=multiselect]").multiselect()})})
